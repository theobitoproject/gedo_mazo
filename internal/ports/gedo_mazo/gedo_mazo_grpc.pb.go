// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: gedo_mazo.proto

package gedo_mazo

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GedoMazoClient is the client API for GedoMazo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GedoMazoClient interface {
	// Takes a template as the base to clone and create a new document
	// and then modifies/replaces context inside the cloned document
	GenerateDocumentFromTemplate(ctx context.Context, in *GenerateDocumentFromTemplateRequest, opts ...grpc.CallOption) (*GenerateDocumentFromTemplateResponse, error)
}

type gedoMazoClient struct {
	cc grpc.ClientConnInterface
}

func NewGedoMazoClient(cc grpc.ClientConnInterface) GedoMazoClient {
	return &gedoMazoClient{cc}
}

func (c *gedoMazoClient) GenerateDocumentFromTemplate(ctx context.Context, in *GenerateDocumentFromTemplateRequest, opts ...grpc.CallOption) (*GenerateDocumentFromTemplateResponse, error) {
	out := new(GenerateDocumentFromTemplateResponse)
	err := c.cc.Invoke(ctx, "/gedo_mazo.GedoMazo/GenerateDocumentFromTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GedoMazoServer is the server API for GedoMazo service.
// All implementations should embed UnimplementedGedoMazoServer
// for forward compatibility
type GedoMazoServer interface {
	// Takes a template as the base to clone and create a new document
	// and then modifies/replaces context inside the cloned document
	GenerateDocumentFromTemplate(context.Context, *GenerateDocumentFromTemplateRequest) (*GenerateDocumentFromTemplateResponse, error)
}

// UnimplementedGedoMazoServer should be embedded to have forward compatible implementations.
type UnimplementedGedoMazoServer struct {
}

func (UnimplementedGedoMazoServer) GenerateDocumentFromTemplate(context.Context, *GenerateDocumentFromTemplateRequest) (*GenerateDocumentFromTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateDocumentFromTemplate not implemented")
}

// UnsafeGedoMazoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GedoMazoServer will
// result in compilation errors.
type UnsafeGedoMazoServer interface {
	mustEmbedUnimplementedGedoMazoServer()
}

func RegisterGedoMazoServer(s grpc.ServiceRegistrar, srv GedoMazoServer) {
	s.RegisterService(&GedoMazo_ServiceDesc, srv)
}

func _GedoMazo_GenerateDocumentFromTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateDocumentFromTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GedoMazoServer).GenerateDocumentFromTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gedo_mazo.GedoMazo/GenerateDocumentFromTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GedoMazoServer).GenerateDocumentFromTemplate(ctx, req.(*GenerateDocumentFromTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GedoMazo_ServiceDesc is the grpc.ServiceDesc for GedoMazo service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GedoMazo_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gedo_mazo.GedoMazo",
	HandlerType: (*GedoMazoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateDocumentFromTemplate",
			Handler:    _GedoMazo_GenerateDocumentFromTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gedo_mazo.proto",
}
