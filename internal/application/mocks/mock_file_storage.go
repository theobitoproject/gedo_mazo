// Code generated by MockGen. DO NOT EDIT.
// Source: internal/application/file_storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/theobitoproject/gedo_mazo/internal/domain"
)

// MockFileStorage is a mock of FileStorage interface.
type MockFileStorage struct {
	ctrl     *gomock.Controller
	recorder *MockFileStorageMockRecorder
}

// MockFileStorageMockRecorder is the mock recorder for MockFileStorage.
type MockFileStorageMockRecorder struct {
	mock *MockFileStorage
}

// NewMockFileStorage creates a new mock instance.
func NewMockFileStorage(ctrl *gomock.Controller) *MockFileStorage {
	mock := &MockFileStorage{ctrl: ctrl}
	mock.recorder = &MockFileStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileStorage) EXPECT() *MockFileStorageMockRecorder {
	return m.recorder
}

// CloneDocument mocks base method.
func (m *MockFileStorage) CloneDocument(arg0 context.Context, arg1 *domain.Document, arg2 *domain.Folder) (*domain.Document, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloneDocument", arg0, arg1, arg2)
	ret0, _ := ret[0].(*domain.Document)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CloneDocument indicates an expected call of CloneDocument.
func (mr *MockFileStorageMockRecorder) CloneDocument(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloneDocument", reflect.TypeOf((*MockFileStorage)(nil).CloneDocument), arg0, arg1, arg2)
}

// MergeDataIntoDocument mocks base method.
func (m *MockFileStorage) MergeDataIntoDocument(arg0 context.Context, arg1 *domain.Document, arg2 *domain.MergingData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MergeDataIntoDocument", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// MergeDataIntoDocument indicates an expected call of MergeDataIntoDocument.
func (mr *MockFileStorageMockRecorder) MergeDataIntoDocument(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MergeDataIntoDocument", reflect.TypeOf((*MockFileStorage)(nil).MergeDataIntoDocument), arg0, arg1, arg2)
}
